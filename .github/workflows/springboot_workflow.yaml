name: SpringBoot Microservice

defaults:
  run:
    shell: bash
    working-directory: demo

on:
  push:
    paths:
      - demo

  workflow_dispatch:

jobs:
  container-demo:
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:17-jdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Check java version
        run: java --version

  springboot-build:
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:17-jdk
    outputs:
      success: ${{ steps.build.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Build
        id: build
        run: |
          java --version
          ./gradlew build
          echo "APP_JAR=$(./gradlew -q getJarName)" >> $GITHUB_ENV
          echo "result=OK" >> $GITHUB_OUTPUT

      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: demo/build/libs/${{ env.APP_JAR }}.jar

  springboot-container:
    runs-on: ubuntu-latest
    needs: springboot-build

    env:
      GITHUB_REPOSITORY: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Build Container
        run: |
          echo "${{ needs.springboot-build.outputs.success }}"

      - name: Get JAR
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: demo
      - name: Run ls
        run: ls -lrth

      - name: Docker Build with JAR
        run: |
          docker build -t spring-boot-demo:latest .
          repository_lowercase=$(echo "${{ env.GITHUB_REPOSITORY }}" | tr '[:upper:]' '[:lower:]')
          docker tag spring-boot-demo:latest ghcr.io/$repository_lowercase/spring-boot-demo:latest


