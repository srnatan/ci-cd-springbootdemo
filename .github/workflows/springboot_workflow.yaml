name: SpringBoot Microservice

defaults:
    run:
        shell: bash
        working-directory: demo

on:
    push:

    workflow_dispatch:


jobs:
    container-demo:
        runs-on: ubuntu-latest
        container:
            image: eclipse-temurin:17-jdk        
        
        steps:
            - name: checkout
              uses: actions/checkout@v4.1.1

            - name: Check java version
              run: java --version
    
    springboot-build:
        runs-on: ubuntu-latest
        #lo corremos en un container porque necesitamos java 17 y por defecto el runner usa java 11
        container:
            image: eclipse-temurin:17-jdk
        env: 
          ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
        outputs:
            success: ${{ steps.build.outputs.result }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1
            
            - name: Build
              id: build
              run: |
                java --version
                ./gradlew build
                echo "JAR_NAME=$(./gradlew -q getJarName)" >> $GITHUB_ENV 
                echo "result=OK" >> $GITHUB_OUTPUT
            
            - name: Archive
              uses: actions/upload-artifact@v3
              with:
                name: spring-boot-jar
                path: demo/build/libs/${{ env.JAR_NAME }}.jar

    # springboot-container:
    #     runs-on: ubuntu-latest
    #     needs: springboot-build

    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v4.1.1

    #         - name: Build Container
    #           run: |
    #             echo ${{ needs.springboot-build.outputs.success }}

    #         - name: Get Jar
    #           uses: actions/download-artifact@v4
    #           with:
    #             name: spring-boot-jar
    #             path: demo

    #         - name: Run ls
    #           run: ls -lrth




            